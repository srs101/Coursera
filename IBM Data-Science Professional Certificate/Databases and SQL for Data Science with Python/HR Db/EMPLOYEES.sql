SELECT AVG(EMPLOYEES.SALARY) FROM EMPLOYEES;
/*retrieve all employee records whose salary is lower than the average salary*/

SELECT * FROM EMPLOYEES
WHERE EMPLOYEES.SALARY < ( SELECT AVG(EMPLOYEES.SALARY) FROM EMPLOYEES);

/*retrieves all employee records with EMP_ID, SALARY, and maximum salary as MAX_SALARY in every row. */ 
SELECT EMPLOYEES.EMP_ID, EMPLOYEES.SALARY, 
	(SELECT MAX(EMPLOYEES.SALARY) FROM EMPLOYEES) AS "MAX_SALARY"
    FROM EMPLOYEES;
/*extract the first and last names of the oldest employee */
SELECT EMPLOYEES.F_NAME, EMPLOYEES.L_NAME FROM EMPLOYEES
WHERE EMPLOYEES.B_DATE = ( SELECT MIN(EMPLOYEES.B_DATE) FROM EMPLOYEES);

/*average salary of the top 5 earners in the company*/
# FIRST PART OF QUERY: TOP 5 EARNERS
SELECT * FROM EMPLOYEES 
ORDER BY EMPLOYEES.SALARY DESC LIMIT 5;
# USING THIS AD DERIVED TABLE TO THE AVERAGE OF THEIR SALARIES:
SELECT AVG(T1.SALARY) FROM 
(SELECT * FROM EMPLOYEES 
ORDER BY EMPLOYEES.SALARY DESC LIMIT 5) AS T1;
/* 1. Write a query to find the average salary of the five least-earning employees.*/
SELECT AVG(T1.SALARY) FROM 
(SELECT * FROM EMPLOYEES 
ORDER BY EMPLOYEES.SALARY LIMIT 5) AS T1; 
/* Write a query to find the records of employees older than the average age of all employees.*/
SELECT * 
FROM EMPLOYEES
WHERE 
	EMPLOYEES.B_DATE > (
        SELECT AVG(EMPLOYEES.B_DATE) 
        FROM EMPLOYEES
        );
/*From the Job_History table, display the list of Employee IDs, years of service, and average years of service for all entries. */

# THIS GIVES SERVICE IN NO. OF DAYS
SELECT JOB_HISTORY.EMPL_ID,JOB_HISTORY.START_DATE,(DATEDIFF(CURRENT_DATE,JOB_HISTORY.START_DATE)) AS "SERVICE" FROM JOB_HISTORY;
# CONVERTING IT SERVICE IN NO. OF YEARS
SELECT	JOB_HISTORY.EMPL_ID,
		JOB_HISTORY.START_DATE,
        YEAR(FROM_DAYS(DATEDIFF(CURRENT_DATE,JOB_HISTORY.START_DATE))) 
        AS "SERVICE"
FROM JOB_HISTORY;
# AVERAGE YEARS OF SERVICE
SELECT AVG(YEAR(FROM_DAYS(DATEDIFF(CURRENT_DATE,JOB_HISTORY.START_DATE)))) AS "AVG. SERVICE"
FROM JOB_HISTORY;
# FINAL SOLUTION
SELECT	JOB_HISTORY.EMPL_ID,
		JOB_HISTORY.START_DATE,
        ( DATEDIFF(CURRENT_DATE,JOB_HISTORY.START_DATE)  )AS "SERVICE (DAYS)",
        (YEAR(FROM_DAYS(DATEDIFF(CURRENT_DATE,JOB_HISTORY.START_DATE)))) AS "SERVICE (YRS)",
        (SELECT AVG(YEAR(FROM_DAYS(DATEDIFF(CURRENT_DATE,JOB_HISTORY.START_DATE))))FROM JOB_HISTORY) AS "AVG. SERVICE"    
FROM JOB_HISTORY;

# PRACTICE 2
/*Retrieve only the EMPLOYEES records corresponding to jobs in the JOBS table. */
SELECT * FROM EMPLOYEES E 
WHERE E.JOB_ID IN (SELECT JOBS.JOB_IDENT FROM JOBS);
/* Retrieve JOB information for employees earning over $70,000. */
SELECT * FROM JOBS
WHERE JOBS.JOB_IDENT IN
(SELECT EMPLOYEES.JOB_ID FROM EMPLOYEES 
 WHERE EMPLOYEES.SALARY > 70000);
 /* Retrieve only the EMPLOYEES records corresponding to jobs in the JOBS table. */
SELECT * 
FROM EMPLOYEES E, JOBS J 
WHERE E.JOB_ID = J.JOB_IDENT;
/* In the previous query, retrieve only the Employee ID, Name, and Job Title. */
SELECT 
E.EMP_ID,  
E.F_NAME,
E.L_NAME,
J.JOB_TITLE
FROM EMPLOYEES E, JOBS J 
WHERE E.JOB_ID = J.JOB_IDENT;
/* 1.Retrieve only the list of employees whose JOB_TITLE is Jr. Designer. */
SELECT * 
FROM EMPLOYEES
WHERE 
EMPLOYEES.JOB_ID IN (
    SELECT JOBS.JOB_IDENT FROM JOBS WHERE JOBS.JOB_TITLE = "Jr. Designer"
    );
# USING IMPLICIT JOIN
SELECT * 
FROM EMPLOYEES E, JOBS J 
WHERE E.JOB_ID = J.JOB_IDENT AND J.JOB_TITLE = "Jr. Designer"; 
/* 2.Retrieve JOB information and a list of employees whose birth year is after 1976. */
# SUB QUERY
SELECT 
EMPLOYEES.JOB_ID, 
EMPLOYEES.B_DATE 
FROM EMPLOYEES
WHERE 
YEAR(EMPLOYEES.B_DATE) > 1976;
#
SELECT * 
FROM JOBS
WHERE 
JOBS.JOB_IDENT IN (
    SELECT EMPLOYEES.JOB_ID 
    FROM EMPLOYEES
    WHERE 
    YEAR(EMPLOYEES.B_DATE) > 1976);
# IMPLICIT JOIN
SELECT J.JOB_IDENT, J.JOB_TITLE, J.MIN_SALARY, J.MAX_SALARY
FROM JOBS J, EMPLOYEES E
WHERE 
J.JOB_IDENT = E.JOB_ID AND YEAR(E.B_DATE)>1976;